;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.1b Evaluation
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 5/5/2021
;Author  : Freeware, for evaluation and non-commercial use only
;Company :
;Comments:
;
;
;Chip type               : ATmega8515
;Program type            : Application
;AVR Core Clock frequency: 3.680000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 128
;*****************************************************/
;
;#include <mega8515.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000004 VOL: 0
	#endif
;PCODE: $00000005 VOL: 0
;PCODE: $00000006 VOL: 0
;
;
;// the LED 0 on PORTB will be ON
;unsigned char led_status = 0xFE;
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0020 {

	.CSEG
;PCODE: $00000007 VOL: 0
;PCODE: $00000008 VOL: 0
; 0000 0021 // Reinitialize Timer1 value
; 0000 0022 TCNT1H=0xF8FB >> 8;
;PCODE: $00000009 VOL: 0
;PCODE: $0000000A VOL: 0
; 0000 0023 TCNT1L=0xF8FB & 0xff;
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; 0000 0024 
; 0000 0025 // Place your code here
; 0000 0026 // move the LED
; 0000 0027 led_status<<=1;
;PCODE: $0000000D VOL: 0
; 0000 0028 led_status|=1;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0029 
; 0000 002A if(led_status==0xFF) led_status=0FE;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002B 
; 0000 002C // turn ON the appropiate LED
; 0000 002D PORTB = led_status;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002E }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0033 {
;PCODE: $0000001C VOL: 0
; 0000 0034 // Declare your local variables here
; 0000 0035 
; 0000 0036 // Input/Output Ports initialization
; 0000 0037 // Port A initialization
; 0000 0038 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0039 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 003A PORTA=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 003B DDRA=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 003C 
; 0000 003D // Port B initialization
; 0000 003E // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 003F // State7=1 State6=1 State5=1 State4=1 State3=1 State2=1 State1=1 State0=1
; 0000 0040 PORTB=0xFF;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0041 DDRB=0xFF;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0042 
; 0000 0043 // Port C initialization
; 0000 0044 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0045 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0046 PORTC=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0047 DDRC=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0048 
; 0000 0049 // Port D initialization
; 0000 004A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004C PORTD=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 004D DDRD=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 004E 
; 0000 004F // Port E initialization
; 0000 0050 // Func2=In Func1=In Func0=In
; 0000 0051 // State2=T State1=T State0=T
; 0000 0052 PORTE=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0053 DDRE=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0054 
; 0000 0055 // Timer/Counter 0 initialization
; 0000 0056 // Clock source: System Clock
; 0000 0057 // Clock value: Timer 0 Stopped
; 0000 0058 // Mode: Normal top=0xFF
; 0000 0059 // OC0 output: Disconnected
; 0000 005A TCCR0=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 005B TCNT0=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 005C OCR0=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 005D 
; 0000 005E // Timer/Counter 1 initialization
; 0000 005F // Clock source: System Clock
; 0000 0060 // Clock value: 3.594 kHz
; 0000 0061 // Mode: Normal top=0xFFFF
; 0000 0062 // OC1A output: Discon.
; 0000 0063 // OC1B output: Discon.
; 0000 0064 // Noise Canceler: Off
; 0000 0065 // Input Capture on Falling Edge
; 0000 0066 // Timer1 Overflow Interrupt: On
; 0000 0067 // Input Capture Interrupt: Off
; 0000 0068 // Compare A Match Interrupt: Off
; 0000 0069 // Compare B Match Interrupt: Off
; 0000 006A TCCR1A=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 006B TCCR1B=0x05;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 006C TCNT1H=0xF8;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 006D TCNT1L=0xFB;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 006E ICR1H=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 006F ICR1L=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0070 OCR1AH=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0071 OCR1AL=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0072 OCR1BH=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0073 OCR1BL=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0074 
; 0000 0075 // External Interrupt(s) initialization
; 0000 0076 // INT0: Off
; 0000 0077 // INT1: Off
; 0000 0078 // INT2: Off
; 0000 0079 MCUCR=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 007A EMCUCR=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 007B 
; 0000 007C // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 007D TIMSK=0x80;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 007E 
; 0000 007F // USART initialization
; 0000 0080 // USART disabled
; 0000 0081 UCSRB=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0082 
; 0000 0083 // Analog Comparator initialization
; 0000 0084 // Analog Comparator: Off
; 0000 0085 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0086 ACSR=0x80;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0087 
; 0000 0088 // SPI initialization
; 0000 0089 // SPI disabled
; 0000 008A SPCR=0x00;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 008B 
; 0000 008C // Global enable interrupts
; 0000 008D #asm("sei")
;PCODE: $00000057 VOL: 0
	sei
;PCODE: $00000058 VOL: 0
; 0000 008E 
; 0000 008F while (1)
;PCODE: $00000059 VOL: 0
; 0000 0090       {
; 0000 0091       // Place your code here
; 0000 0092 
; 0000 0093       }
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0094 }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
